<?xml version="1.0"?>
<!-- DO NOT CHANGE THIS FILE MANUALLY, IT IS AUTOMATICALLY GENERATED -->
<!-- GENERATED FROM https://github.com/linuxserver/docker-openssh-server/blob/master/readme-vars.yml -->
<Container version="2">
    <Name>openssh-server</Name>
    <Repository>lscr.io/linuxserver/openssh-server</Repository>
    <Registry>https://github.com/orgs/linuxserver/packages/container/package/openssh-server</Registry>
    <DonateText>Donations</DonateText>
    <DonateLink>https://www.linuxserver.io/donate</DonateLink>
    <DonateImg>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png</DonateImg>
    <Network>bridge</Network>
    <Privileged>false</Privileged>
    <Support>https://github.com/linuxserver/docker-openssh-server/issues/new/choose</Support>
    <Shell>bash</Shell>
    <GitHub>https://github.com/linuxserver/docker-openssh-server#application-setup</GitHub>
    <ReadMe>https://github.com/linuxserver/docker-openssh-server#readme</ReadMe>
    <Project>https://www.openssh.com/</Project>
    <Overview>Openssh-server(https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server.
Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into.
The users only have access to the folders mapped and the processes running inside this container.</Overview>
    <TemplateURL>https://raw.githubusercontent.com/linuxserver/templates/main/unraid/openssh-server.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openssh-server-logo.png</Icon>
    <Date>2022-04-16</Date>
    <Changes>
### 2022-04-16
- Rebase to alpine 3.15.

### 2021-11-16
- Add PUBLIC_KEY_URL option

### 2021-06-28
- Rebasing to alpine 3.14. Add support for PAM.

### 2021-02-10
- Rebasing to alpine 3.13. Add openssh-client for scp.

### 2020-10-21
- Implement s6-log for openssh, which adds local timestamps to logs and can be used with a log parser like fail2ban.

### 2020-10-20
- Set umask for sftp.

### 2020-06-01
- Rebasing to alpine 3.12.

### 2020-01-18
- Add key generation script.

### 2020-01-13
- Add openssh-sftp-server.

### 2019-12-19
- Rebasing to alpine 3.11.

### 2019-10-17
- Initial Release.

    </Changes>
    <Config Name="WebUI" Target="2222" Default="2222" Mode="tcp" Description="ssh port" Type="Port" Display="always" Required="true" Mask="false"/>
    <Config Name="Appdata" Target="/config" Default="" Mode="rw" Description="Contains all relevant configuration files." Type="Path" Display="advanced" Required="true" Mask="false"/>
    <Config Name="PUBLIC_KEY" Target="PUBLIC_KEY" Default="yourpublickey" Description="Optional ssh public key, which will automatically be added to authorized_keys." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="PUBLIC_KEY_FILE" Target="PUBLIC_KEY_FILE" Default="/path/to/file" Description="Optionally specify a file containing the public key (works with docker secrets)." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="PUBLIC_KEY_DIR" Target="PUBLIC_KEY_DIR" Default="/path/to/directory/containing/_only_/pubkeys" Description="Optionally specify a directory containing the public keys (works with docker secrets)." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="PUBLIC_KEY_URL" Target="PUBLIC_KEY_URL" Default="https://github.com/username.keys" Description="Optionally specify a URL containing the public key." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="SUDO_ACCESS" Target="SUDO_ACCESS" Default="false" Description="Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PASSWORD_ACCESS" Target="PASSWORD_ACCESS" Default="false" Description="Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="USER_PASSWORD" Target="USER_PASSWORD" Default="password" Description="Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="USER_PASSWORD_FILE" Target="USER_PASSWORD_FILE" Default="/path/to/file" Description="Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets)." Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="USER_NAME" Target="USER_NAME" Default="linuxserver.io" Description="Optionally specify a user name (Default:`linuxserver.io`)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PUID" Target="PUID" Default="99" Description="Container Variable: PUID" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="PGID" Target="PGID" Default="100" Description="Container Variable: PGID" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="UMASK" Target="UMASK" Default="022" Description="Container Variable: UMASK" Type="Variable" Display="advanced" Required="false" Mask="false"/>
</Container>
