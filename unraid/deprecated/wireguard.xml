<?xml version="1.0"?>
<!-- DO NOT CHANGE THIS FILE MANUALLY, IT IS AUTOMATICALLY GENERATED -->
<!-- GENERATED FROM https://github.com/linuxserver/docker-wireguard/blob/master/readme-vars.yml -->
<Container version="2">
    <Name>wireguard</Name>
    <Repository>lscr.io/linuxserver/wireguard</Repository>
    <Registry>https://github.com/orgs/linuxserver/packages/container/package/wireguard</Registry>
    <DonateText>Donations</DonateText>
    <DonateLink>https://www.linuxserver.io/donate</DonateLink>
    <DonateImg>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png</DonateImg>
    <Network>bridge</Network>
    <Privileged>false</Privileged>
    <Support>https://github.com/linuxserver/docker-wireguard/issues/new/choose</Support>
    <Shell>bash</Shell>
    <GitHub>https://github.com/linuxserver/docker-wireguard#application-setup</GitHub>
    <ReadMe>https://github.com/linuxserver/docker-wireguard#readme</ReadMe>
    <Project>https://www.wireguard.com/</Project>
    <Overview>WireGuardÂ®(https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.</Overview>
    <ExtraParams>--cap-add=NET_ADMIN --cap-add=SYS_MODULE --sysctl=net.ipv4.conf.all.src_valid_mark=1</ExtraParams>
    <TemplateURL>https://raw.githubusercontent.com/linuxserver/templates/main/unraid/wireguard.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png</Icon>
    <Date>2022-05-16</Date>
    <Changes>
### 2022-05-16
- Improve NAT handling in server mode when multiple ethernet devices are present.

### 2022-04-23
- Add pre-shared key support. Automatically added to all new peer confs generated, existing ones are left without to ensure no breaking changes.

### 2022-04-10
- Rebase to Ubuntu Focal. Add `LOG_CONFS` env var. Remove deprecated `add-peer` command.

### 2021-10-28
- Add site-to-site vpn support.

### 2021-02-11
- Fix bug related to changing internal subnet and named peer confs not updating.

### 2020-10-06
- Disable CoreDNS in client mode, or if port 53 is already in use in server mode.

### 2020-10-04
- Allow to specify a list of names as PEERS and add ALLOWEDIPS environment variable. Also, add peer name/id to each one of the peer sections in wg0.conf. Important: Existing users need to delete `/config/templates/peer.conf` and restart

### 2020-09-27
- Cleaning service binding example to have accurate PreDown script.

### 2020-08-06
- Replace resolvconf with openresolv due to dns issues when a client based on this image is connected to a server also based on this image. Add IPv6 info to readme. Display kernel version in logs.

### 2020-07-29
- Update Coredns config to detect dns loops (existing users need to delete `/config/coredns/Corefile` and restart).

### 2020-07-27
- Update Coredns config to prevent issues with non-user-defined bridge networks (existing users need to delete `/config/coredns/Corefile` and restart).

### 2020-07-05
- Add Debian updates and security repos for headers.

### 2020-06-25
- Simplify module tests, prevent iptables issues from resulting in false negatives.

### 2020-06-19
- Add support for Ubuntu Focal (20.04) kernels. Compile wireguard tools and kernel module instead of using the ubuntu packages. Make module install optional. Improve verbosity in logs.

### 2020-05-29
- Add support for 64bit raspbian.

### 2020-04-28
- Add Buster/Stretch backports repos for Debian. Tested with OMV 5 and OMV 4 (on kernel 4.19.0-0.bpo.8-amd64).

### 2020-04-20
- Fix typo in client mode conf existence check.

### 2020-04-13
- Fix bug that forced conf recreation on every start.

### 2020-04-08
- Add arm32/64 builds and enable multi-arch (rpi4 with ubuntu and raspbian buster tested). Add CoreDNS for `PEERDNS=auto` setting. Update the `add-peer`/`show-peer` scripts to utilize the templates and the `INTERNAL_SUBNET` var (previously missed, oops).

### 2020-04-05
- Add `INTERNAL_SUBNET` variable to prevent subnet clashes. Add templates for server and peer confs.

### 2020-04-01
- Add `show-peer` script and include info on host installed headers.

### 2020-03-31
- Initial Release.

    </Changes>
    <Config Name="WebUI" Target="51820" Default="51820" Mode="udp" Description="wireguard port" Type="Port" Display="always" Required="true" Mask="false"/>
    <Config Name="Appdata" Target="/config" Default="" Mode="rw" Description="Contains all relevant configuration files." Type="Path" Display="advanced" Required="true" Mask="false"/>
    <Config Name="Path: /lib/modules" Target="/lib/modules" Default="" Mode="rw" Description="Maps host&#39;s modules folder." Type="Path" Display="always" Required="true" Mask="false"/>
    <Config Name="SERVERURL" Target="SERVERURL" Default="wireguard.domain.com" Description="External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="SERVERPORT" Target="SERVERPORT" Default="51820" Description="External port for docker host. Used in server mode." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PEERS" Target="PEERS" Default="1" Description="Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PEERDNS" Target="PEERDNS" Default="auto" Description="DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host&#39;s DNS via included CoreDNS forward." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="INTERNAL_SUBNET" Target="INTERNAL_SUBNET" Default="10.13.13.0" Description="Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="ALLOWEDIPS" Target="ALLOWEDIPS" Default="0.0.0.0/0" Description="The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: &#39;0.0.0.0/0, ::0/0&#39; This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server&#39;s WG ip, such as 10.13.13.1." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="LOG_CONFS" Target="LOG_CONFS" Default="true" Description="Generated QR codes will be displayed in the docker log. Set to `false` to skip log output." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PUID" Target="PUID" Default="99" Description="Container Variable: PUID" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="PGID" Target="PGID" Default="100" Description="Container Variable: PGID" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="UMASK" Target="UMASK" Default="022" Description="Container Variable: UMASK" Type="Variable" Display="advanced" Required="false" Mask="false"/>
</Container>
