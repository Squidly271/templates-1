<?xml version="1.0"?>
<!-- DO NOT CHANGE THIS FILE MANUALLY, IT IS AUTOMATICALLY GENERATED -->
<Container version="2">
    <Name>jellyfin</Name>
    <Repository>ghcr.io/linuxserver/jellyfin</Repository>
    <Registry>https://github.com/orgs/linuxserver/packages/container/package/jellyfin</Registry>
    <DonateText>Donations</DonateText>
    <DonateLink>https://www.linuxserver.io/donate</DonateLink>
    <DonateImg>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/donate.png</DonateImg>
    <Network>bridge</Network>
    <Privileged>false</Privileged>
    <Support>https://github.com/linuxserver/docker-jellyfin/issues/new/choose</Support>
    <Branch>
        <Tag>latest</Tag>
        <TagDescription>Stable Jellyfin releases - Focal baseimage</TagDescription>
    </Branch>
    <Branch>
        <Tag>bionic</Tag>
        <TagDescription>Stable Jellyfin releases - Bionic baseimage</TagDescription>
    </Branch>
    <Branch>
        <Tag>nightly</Tag>
        <TagDescription>Nightly Jellyfin releases</TagDescription>
    </Branch>
    <Project>https://jellyfin.github.io/</Project>
    <Overview>[Jellyfin](https://jellyfin.github.io/) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.</Overview>
    <WebUI>http://[IP]:[PORT:8096]</WebUI>
    <TemplateURL>https://raw.githubusercontent.com/linuxserver/templates/main/unraid/jellyfin.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/linuxserver-ls-logo.png</Icon>
    <Config Name="WebUI" Target="8096" Default="8096" Mode="tcp" Description="Http webUI." Type="Port" Display="always" Required="true" Mask="false"/>
    <Config Name="Port: 8920" Target="8920" Default="8920" Mode="tcp" Description="Optional - Https webUI (you need to set up your own certificate)." Type="Port" Display="always" Required="false" Mask="false"/>
    <Config Name="Port: 7359" Target="7359" Default="7359" Mode="udp" Description="Optional - Allows clients to discover Jellyfin on the local network." Type="Port" Display="always" Required="false" Mask="false"/>
    <Config Name="Port: 1900" Target="1900" Default="1900" Mode="udp" Description="Optional - Service discovery used by DNLA and clients." Type="Port" Display="always" Required="false" Mask="false"/>
    <Config Name="Appdata" Target="/config" Default="" Mode="rw" Description="Jellyfin data storage location. *This can grow very large, 50gb+ is likely for a large collection.*" Type="Path" Display="always" Required="true" Mask="false"/>
    <Config Name="Path: /data/tvshows" Target="/data/tvshows" Default="" Mode="rw" Description="Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc." Type="Path" Display="always" Required="true" Mask="false"/>
    <Config Name="Path: /data/movies" Target="/data/movies" Default="" Mode="rw" Description="Media goes here. Add as many as needed e.g. `/data/movies`, `/data/tv`, etc." Type="Path" Display="always" Required="true" Mask="false"/>
    <Config Name="Path: /opt/vc/lib" Target="/opt/vc/lib" Default="" Mode="rw" Description="Path for Raspberry Pi OpenMAX libs *optional*." Type="Path" Display="always" Required="false" Mask="false"/>
    <Config Name="JELLYFIN_PublishedServerUrl" Target="JELLYFIN_PublishedServerUrl" Default="192.168.0.5" Description="Set the autodiscovery response domain or IP address." Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PUID" Target="PUID" Default="99" Description="Container Variable: PUID" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="PGID" Target="PGID" Default="100" Description="Container Variable: PGID" Type="Variable" Display="always" Required="false" Mask="false"/>    <Config Name="/dev/dri" Default="/dev/dri" Description="Only needed if you want to use your Intel GPU for hardware accelerated video encoding (vaapi)." Type="Device" Display="always" Required="true" Mask="false"/>
    <Config Name="/dev/vcsm" Default="/dev/vcsm" Description="Only needed if you want to use your Raspberry Pi MMAL video decoding (Enabled as OpenMax H264 decode in gui settings)." Type="Device" Display="always" Required="true" Mask="false"/>
    <Config Name="/dev/vchiq" Default="/dev/vchiq" Description="Only needed if you want to use your Raspberry Pi OpenMax video encoding." Type="Device" Display="always" Required="true" Mask="false"/>
    <Config Name="/dev/video10" Default="/dev/video10" Description="Only needed if you want to use your Raspberry Pi V4L2 video encoding." Type="Device" Display="always" Required="true" Mask="false"/>
    <Config Name="/dev/video11" Default="/dev/video11" Description="Only needed if you want to use your Raspberry Pi V4L2 video encoding." Type="Device" Display="always" Required="true" Mask="false"/>
    <Config Name="/dev/video12" Default="/dev/video12" Description="Only needed if you want to use your Raspberry Pi V4L2 video encoding." Type="Device" Display="always" Required="true" Mask="false"/>

</Container>